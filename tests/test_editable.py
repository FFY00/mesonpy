# SPDX-FileCopyrightText: 2021 The meson-python developers
#
# SPDX-License-Identifier: MIT

import os
import shutil

import mesonpy


def test_editable(
    package_imports_itself_during_build,
    editable_imports_itself_during_build,
    venv,
):
    venv.pip('install', os.fspath(editable_imports_itself_during_build))

    assert venv.python('-c', 'import plat; print(plat.foo())').strip() == 'bar'

    plat = package_imports_itself_during_build / 'plat.c'
    plat_text = plat.read_text()
    try:
        plat.write_text(plat_text.replace('bar', 'something else'))

        assert venv.python('-c', 'import plat; print(plat.foo())').strip() == 'something else'
    finally:
        plat.write_text(plat_text)


def test_editable_broken_non_existent_build_dir(
    package_imports_itself_during_build,
    editable_imports_itself_during_build,
    venv,
    tmp_path,
):
    # Start from a clean slate, copy the package to temp path
    # Ensure there is no .mesonpy directory (could be generated by test_editable)
    shutil.rmtree(tmp_path)  # copytree requires dest not to exist
    shutil.copytree(package_imports_itself_during_build, tmp_path)
    mesonpy_dir = os.path.join(package_imports_itself_during_build, '.mesonpy')
    if os.path.isdir(mesonpy_dir):
        venv.pip('uninstall', '-y', 'imports-itself-during-build')
        shutil.rmtree(mesonpy_dir)

    venv.pip('install', os.path.join(tmp_path, mesonpy.build_editable(tmp_path)))

    # Try corrupting the build dir,
    # removing the build dir after an install will trigger it
    if os.path.isdir(mesonpy_dir):
        venv.pip('uninstall', '-y', 'imports-itself-during-build')
        shutil.rmtree(mesonpy_dir)

    venv.pip('install', os.path.join(tmp_path, mesonpy.build_editable(tmp_path)))

    assert venv.python('-c', 'import plat; print(plat.foo())').strip() == 'bar'
